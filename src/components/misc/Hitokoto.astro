---
interface Props {
	class?: string;
}

const { class: className } = Astro.props;
---

<div class={className}>
  <div class="hitokoto-text text-white text-xl md:text-2xl font-bold text-center drop-shadow-lg"></div>
  <div class="hitokoto-source text-white text-base md:text-lg text-center mt-2 drop-shadow-lg"></div>
</div>

<style is:global>
.hitokoto-container {
  position: absolute;
  bottom: 20px;
  left: 0;
  right: 0;
  z-index: 20;
  width: 80%;
  max-width: 800px;
  text-align: center;
  margin: 0 auto;
}

.hitokoto-text {
  color: white;
  font-size: 1.25rem;
  font-weight: bold;
  text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.8);
}

.hitokoto-source {
  color: white;
  font-size: 1rem;
  margin-top: 0.5rem;
  text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.8);
}

/* 移动端适配 */
@media (max-width: 768px) {
  .hitokoto-container {
    width: 90%;
    max-width: none;
    bottom: 10px;
  }
  
  .hitokoto-text {
    font-size: 1rem;
    line-height: 1.4;
  }
  
  .hitokoto-source {
    font-size: 0.875rem;
  }
}

@media (max-width: 480px) {
  .hitokoto-container {
    width: 95%;
    bottom: 5px;
  }
  
  .hitokoto-text {
    font-size: 0.875rem;
  }
  
  .hitokoto-source {
    font-size: 0.75rem;
  }
}
</style>

<script is:inline>
  // 获取一言数据
  fetch('https://v1.hitokoto.cn/?c=b')
    .then(response => response.json())
    .then(data => {
      const hitokotoText = document.querySelector('.hitokoto-text');
      const hitokotoSource = document.querySelector('.hitokoto-source');
      
      if (hitokotoText) {
        hitokotoText.textContent = data.hitokoto;
      }
      
      if (hitokotoSource && data.from) {
        hitokotoSource.textContent = `—— ${data.from}`;
      }
    })
    .catch(error => {
      console.error('获取一言失败:', error);
      // 显示默认内容
      const hitokotoText = document.querySelector('.hitokoto-text');
      if (hitokotoText) {
        hitokotoText.textContent = '一言加载失败';
      }
    });
</script>